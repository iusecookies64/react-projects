{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","searchField","className","alt","src","id","name","email","index","toLowerCase","indexOf","str1","slice","str2","length","str3","CardList","props","monsters","map","SearchBox","require","type","placeholder","onChange","handleChange","App","e","setState","target","value","state","this","thisValue","filteredMonsters","filter","includes","fetch","then","response","json","users","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC9B,GAAoB,KAAhBA,EACF,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BAEL,6BAAKL,EAAQM,OACb,4BAAIN,EAAQO,UANuBP,EAAQK,IAU/C,IAAMG,EAAQR,EAAQM,KAAKG,cAAcC,QAAQT,GAC3CU,EAAOX,EAAQM,KAAKM,MAAM,EAAGJ,GAC7BK,EAAOb,EAAQM,KAAKM,MAAMJ,EAAOA,EAAQP,EAAYa,QACrDC,EAAOf,EAAQM,KAAKM,MAAMJ,EAAQP,EAAYa,QACpD,OACE,sBAAKZ,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BAEL,+BACE,+BAAOM,IACP,sBAAMT,UAAU,YAAhB,SAA6BW,IAC7B,+BAAOE,OAET,4BAAIf,EAAQO,UAVuBP,EAAQK,KCjBtCW,EAAW,SAACC,GACvB,OACE,qBAAKf,UAAU,YAAf,SACGe,EAAMC,SAASC,KAAI,SAACnB,GAAD,OAClB,cAAC,EAAD,CACEA,QAASA,EAETC,YAAagB,EAAMhB,aADdD,EAAQK,UCPVe,G,MAFCC,EAAQ,GAEG,SAACJ,GACxB,OACE,uBACEf,UAAU,aACVoB,KAAK,SACLC,YAAaN,EAAMM,YACnBC,SAAUP,EAAMQ,iBCsCPC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAQFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAAE3B,YAAa0B,EAAEE,OAAOC,SARtC,EAAKC,MAAQ,CACXb,SAAU,GACVjB,YAAa,GACb6B,MAAO,GALG,E,0CAad,WACEE,KAAKC,UAAUD,KAAKP,cACpB,MAAkCO,KAAKD,MAA/Bb,EAAR,EAAQA,SAAUjB,EAAlB,EAAkBA,YACZiC,EAAmBhB,EAASiB,QAAO,SAACnC,GACxC,OAAOA,EAAQM,KAAKG,cAAc2B,SAASnC,EAAYQ,kBAEzD,OACE,sBAAKP,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEqB,YAAY,iBACZE,aAAcO,KAAKP,eAErB,cAAC,EAAD,CACEP,SAAUgB,EACVjC,YAAaA,EAAYQ,qB,+BAMjC,WAAqB,IAAD,OAClB4B,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKb,SAAS,CAAEV,SAAUuB,W,GAtC/BC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f36ef4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-style.css\";\r\n\r\nexport const Card = ({ monster, searchField }) => {\r\n  if (searchField === \"\") {\r\n    return (\r\n      <div className=\"card-container\" key={monster.id}>\r\n        <img\r\n          alt=\"monster\"\r\n          src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h1>{monster.name}</h1>\r\n        <p>{monster.email}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    const index = monster.name.toLowerCase().indexOf(searchField);\r\n    const str1 = monster.name.slice(0, index);\r\n    const str2 = monster.name.slice(index, index + searchField.length);\r\n    const str3 = monster.name.slice(index + searchField.length);\r\n    return (\r\n      <div className=\"card-container\" key={monster.id}>\r\n        <img\r\n          alt=\"monster\"\r\n          src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h1>\r\n          <span>{str1}</span>\r\n          <span className=\"highlight\">{str2}</span>\r\n          <span>{str3}</span>\r\n        </h1>\r\n        <p>{monster.email}</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./card-list-styles.css\";\r\nimport { Card } from \"../card/card-component.jsx\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((monster) => (\r\n        <Card\r\n          monster={monster}\r\n          key={monster.id}\r\n          searchField={props.searchField}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import \"./search-box-styles.css\";\r\nconst React = require(\"react\");\r\n\r\nexport const SearchBox = (props) => {\r\n  return (\r\n    <input\r\n      className=\"search-box\"\r\n      type=\"search\"\r\n      placeholder={props.placeholder}\r\n      onChange={props.handleChange}\r\n    />\r\n  );\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport { CardList } from \"./components/card-list/card-list-component\";\nimport { SearchBox } from \"./components/search-box/search-box-component.jsx\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n      value: 0,\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    this.thisValue(this.handleChange);\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <h1>Monsters PhoneBook</h1>\n        <SearchBox\n          placeholder=\"Search Monster\"\n          handleChange={this.handleChange}\n        />\n        <CardList\n          monsters={filteredMonsters}\n          searchField={searchField.toLowerCase()}\n        />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}